#!/usr/bin/env bash

#
# HyperNova server management framework
#
# Client GPG key initialisation tool
#
# Copyright (c) 2012 TDM Ltd
#                    Laurent David<laurent@tdm.info>
#

function usage()
{
cat << EOF
usage: $0 options

This script will add a new client key to the agent

OPTIONS:
	-k --key-file: client key file to add to the agent
	-e --email: email linked to this key
EOF
}


[ "$(whoami)" != 'root' ] && echo "You must be root" \
                          && exit 79

                          
eval set -- "$(getopt -o "ke:" --long "key-file:,email:" -- "$@")"

while true; do
    case "$1" in
        -k|--key-file) KEY_FILE="$2" ; shift 2 ;;
        -e|--email) KEY_EMAIL="$2" ; shift 2 ;;
        *) break                              ;;
    esac
done
                
[ -z "$KEY_EMAIL" ] && echo "ERROR: You should provide the email address for the key" && usage && exit 127
[ -z "$KEY_FILE" ] && echo "ERROR: You should provide a  client key file to add" && usage && exit 127

CHROOT="/usr/local/hypernova"
SHARED_STATE="$CHROOT/var"
CUSTOM_CONF="$CHROOT/etc/agent/local.ini"
GPG_HOME="$SHARED_STATE/lib/gpg"

AGENT_KEY_FILE=server.pub

cat >"$BATCH_FILE" <<EOF
Key-Type: ${KEY_TYPE}
Key-Length: ${KEY_LENGTH}
Name-Real: ${KEY_REAL_NAME}
Name-Email: ${KEY_EMAIL}
Name-Comment: ${KEY_COMMENT}
EOF

gpg --homedir $GPG_HOME --import $KEY_FILE
gpg --homedir $GPG_HOME --sign-key ${KEY_EMAIL} --yes
echo "Generating the server key file to send to the client [$AGENT_KEY_FILE]"

gpg --homedir $GPG_HOME --export ${KEY_EMAIL} > $AGENT_KEY_FILE

cat << EOF
The server public key file has been created
Finally, you will then need to connect the client to the agent 
by doing :
	hn-client config node add <name> <iporhostname> 
		[<portifnot3030>] pathtopubkey"
EOF

rm -f "$BATCH_FILE"


